➜  ~ az group create --name az-learn --location eastus
{
  "id": "/subscriptions/a793422a-8009-48f1-8bb1-b1503391ec61/resourceGroups/az-learn",
  "location": "eastus",
  "managedBy": null,
  "name": "az-learn",
  "properties": {
    "provisioningState": "Succeeded"
  },
  "tags": null,
  "type": "Microsoft.Resources/resourceGroups"
}


➜  ~ az acr create --resource-group $AZ_RG --name jekyllblogaci --sku Basic
{
  "adminUserEnabled": false,
  "anonymousPullEnabled": false,
  "creationDate": "2022-11-05T05:21:55.804715+00:00",
  "dataEndpointEnabled": false,
  "dataEndpointHostNames": [],
  "encryption": {
    "keyVaultProperties": null,
    "status": "disabled"
  },
  "id": "/subscriptions/a793422a-8009-48f1-8bb1-b1503391ec61/resourceGroups/az-learn/providers/Microsoft.ContainerRegistry/registries/jekyllblogaci",
  "identity": null,
  "location": "eastus",
  "loginServer": "jekyllblogaci.azurecr.io",
  "name": "jekyllblogaci",
  "networkRuleBypassOptions": "AzureServices",
  "networkRuleSet": null,
  "policies": {
    "azureAdAuthenticationAsArmPolicy": {
      "status": "enabled"
    },
    "exportPolicy": {
      "status": "enabled"
    },
    "quarantinePolicy": {
      "status": "disabled"
    },
    "retentionPolicy": {
      "days": 7,
      "lastUpdatedTime": "2022-11-05T05:22:02.744383+00:00",
      "status": "disabled"
    },
    "softDeletePolicy": {
      "lastUpdatedTime": "2022-11-05T05:22:02.744383+00:00",
      "retentionDays": 7,
      "status": "disabled"
    },
    "trustPolicy": {
      "status": "disabled",
      "type": "Notary"
    }
  },
  "privateEndpointConnections": [],
  "provisioningState": "Succeeded",
  "publicNetworkAccess": "Enabled",
  "resourceGroup": "az-learn",
  "sku": {
    "name": "Basic",
    "tier": "Basic"
  },
  "status": null,
  "systemData": {
    "createdAt": "2022-11-05T05:21:55.804715+00:00",
    "createdBy": "deepanns@live.com",
    "createdByType": "User",
    "lastModifiedAt": "2022-11-05T05:21:55.804715+00:00",
    "lastModifiedBy": "deepanns@live.com",
    "lastModifiedByType": "User"
  },
  "tags": {},
  "type": "Microsoft.ContainerRegistry/registries",
  "zoneRedundancy": "Disabled"
}
➜  ~

➜  ~ az acr list --output table
lNAME           RESOURCE GROUP    LOCATION    SKU    LOGIN SERVER              CREATION DATE         ADMIN ENABLED
-------------  ----------------  ----------  -----  ------------------------  --------------------  ---------------
jekyllblogaci  az-learn          eastus      Basic  jekyllblogaci.azurecr.io  2022-11-05T05:21:55Z  False


➜  ~ AZ_CR_NAME=jekyllblogaci
➜  ~ az acr login --name $AZ_CR_NAME
Login Succeeded
➜  ~

➜  ~ docker images
REPOSITORY                                 TAG       IMAGE ID       CREATED        SIZE
jekyll-blog-aci                            v1        e0fbf509394b   13 hours ago   143MB

➜  ~ docker tag jekyll-blog-aci:v1 jekyllblogaci.azurecr.io/jekyll-blog-aci:v1
➜  ~ docker images
REPOSITORY                                 TAG       IMAGE ID       CREATED        SIZE
jekyllblogaci.azurecr.io/jekyll-blog-aci   v1        e0fbf509394b   13 hours ago   143MB
jekyll-blog-aci                            v1        e0fbf509394b   13 hours ago   143MB

➜  ~ docker push jekyllblogaci.azurecr.io/jekyll-blog-aci:v1
The push refers to repository [jekyllblogaci.azurecr.io/jekyll-blog-aci]
7badbf2daded: Pushed
4e995ecc3c08: Pushed
feb57d363211: Pushed
98c84706d0f7: Pushed
4311f0ea1a86: Pushed
6d049f642241: Pushed
3158f7304641: Pushed
fd95118eade9: Pushed
v1: digest: sha256:5a1c587ccffca8af483a4524fe0120b72b9e1b0fc7df3600431b1552991c0d3b size: 1987

// Making sure that our image is indeed in the Azure container registry

➜  ~ az acr repository list --name $AZ_CR_NAME --output table
Result
---------------
jekyll-blog-aci

➜  ~ az acr repository show-tags --name $AZ_CR_NAME --repository jekyll-blog-aci --output table
Result
--------
v1
➜

// Create a service principal to the private container registry so container instance
can access the image
➜  jekyll-blog-in-cloud-run git:(azure-container-instance) ✗ ACR_NAME=jekyllblogaci SERVICE_PRINCIPAL_NAME=jekyllblogaci-admin ./_app/az_create_service_principal.sh
Creating a service principal jekyllblogaci-admin to jekyllblogaci
WARNING: Creating 'acrpull' role assignment under scope '/subscriptions/a793422a-8009-48f1-8bb1-b1503391ec61/resourceGroups/az-learn/providers/Microsoft.ContainerRegistry/registries/jekyllblogaci'
WARNING: The output includes credentials that you must protect. Be sure that you do not include these credentials in your code or check the credentials into your source control. For more information, see https://aka.ms/azadsp-cli
./_app/az_create_service_principal.sh: line 28: --output: command not found
Service principal ID: ce5c2a23-674b-4473-8c9e-12776b2bd4a8
Service principal password: "XIh8Q~FOzttDqAmc_ZAYpG.dACG8MN1LSHuTucrV"
➜  jekyll-blog-in-cloud-run git:(azure-container-instance) ✗

// Next create the container

az container create --resource-group az-learn \
    --name jekyll-blog-aci \
    --image jekyllblogaci.azurecr.io/jekyll-blog-aci:v1 \
    --cpu 1 --memory 1 \
    --registry-login-server jekyllblogaci.azurecr.io \
    --registry-username ce5c2a23-674b-4473-8c9e-12776b2bd4a8 \
    --registry-password XIh8Q~FOzttDqAmc_ZAYpG.dACG8MN1LSHuTucrV \
    --ip-address Public \
    --dns-name-label jekyll-blog-aci \
    --ports 80


➜  jekyll-blog-in-cloud-run git:(azure-container-instance) ✗ az container show --resource-group az-learn --name jekyll-blog-aci --query ipAddress.fqdn
"jekyll-blog-aci.eastus.azurecontainer.io"

// can combine multiple values into a list or dict
// see https://learn.microsoft.com/en-us/cli/azure/query-azure-cli?tabs=concepts%2Cbash

 az container show --resource-group az-learn --name jekyll-blog-aci --query "{state:instanceView.state, ip:ipAddress.ip, fqdn: ipAddress.fqdn}"
{
  "fqdn": "jekyll-blog-aci.eastus.azurecontainer.io",
  "ip": "4.236.201.238",
  "state": "Running"
}

➜  jekyll-blog-in-cloud-run git:(azure-container-instance) ✗ az container logs --resource-group az-learn --name jekyll-blog-aci

/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: IPv6 listen already enabled
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2022/11/05 21:14:47 [notice] 19#19: using the "epoll" event method
2022/11/05 21:14:47 [notice] 19#19: nginx/1.21.6
2022/11/05 21:14:47 [notice] 19#19: built by gcc 10.2.1 20210110 (Debian 10.2.1-6)
2022/11/05 21:14:47 [notice] 19#19: OS: Linux 5.10.102.2-microsoft-standard
2022/11/05 21:14:47 [notice] 19#19: getrlimit(RLIMIT_NOFILE): 1024:1048576
2022/11/05 21:14:47 [notice] 19#19: start worker processes
2022/11/05 21:14:47 [notice] 19#19: start worker process 40

// Don't forget to delete the container
➜  jekyll-blog-in-cloud-run git:(azure-container-instance) ✗ az container delete --name jekyll-blog-aci --resource-group az-learn
Are you sure you want to perform this operation? (y/n): y

// deleted the resource group as well just in case
➜  jekyll-blog-in-cloud-run git:(azure-container-instance) ✗ az group delete --name az-learn --verbose
Are you sure you want to perform this operation? (y/n): y
Command ran in 125.631 seconds (init: 0.193, invoke: 125.438)

➜  jekyll-blog-in-cloud-run git:(azure-container-instance) ✗ az group list --query "[].name"
[
  "my-test-rg",
  "cloud-shell-storage-eastus",
  "NetworkWatcherRG",
  "my-test-vm_group",
  "acr-learn"
]

// Cost
